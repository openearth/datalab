#!/bin/sh
#
# worker-script         Start script.
#
# chkconfig: 2345 90 60
# description: Start script provided by researcher.

### BEGIN INIT INFO
# Provides: worker-script
# Required-Start: $local_fs $syslog $network $all
# Required-Stop: $local_fs $syslog $network
# Default-Start:  2345
# Default-Stop: 90
# Short-Description: run script provided by researcher
# Description: A script is provided to this lxc-instance  and will be run.
#              After running script, another init script will
#              shutdown this instance.
### END INIT INFO

#[ -f /etc/sysconfig/crond ] || {
#    [ "$1" = "status" ] && exit 4 || exit 6
#}

RETVAL=0
prog="worker-script"
script=/dataset/script.py
lockfile=/var/lock/worker-script
#config=/etc/sysconfig/crond

# Source function library.
. /etc/rc.d/init.d/functions

[ $UID -eq 0 ] && [ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog
start() {
     echo "test"

    if [ $UID -ne 0 ] ; then
        echo "User has insufficient privilege."
        exit 4
    fi
#    [ -f $script ] || exit 5
#    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
#    daemon $prog $CRONDARGS
    retval=$?
    #python $exec
    echo "Start script hier..."
    sleep 5
    echo "Script done!"
    #   set -- $(cat /dataset/config)
    #    for x in "$@"; do
    #        case "$x" in
    #            WORKER_CMD=*)
    #            echo "${x#WORKER_CMD=}"
    #            ;;
    #        esac
    #    done
    #echo
    #[ $retval -eq 0 ] && touch $lockfile
}

stop() {
    if [ $UID -ne 0 ] ; then
        echo "User has insufficient privilege."
        exit 4
    fi
    echo -n $"Stopping $prog: "
	if [ -n "`pidfileofproc $exec`" ]; then
		killproc $exec
		RETVAL=3
	else
		failure $"Stopping $prog"
	fi
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
}

restart() {
    rh_status_q && stop
    start
}

reload() {
	echo -n $"Reloading $prog: "
	if [ -n "`pidfileofproc $exec`" ]; then
		killproc $exec -HUP
	else
		failure $"Reloading $prog"
	fi
	retval=$?
	echo
}

force_reload() {
	# new configuration takes effect after restart
    restart
}

#rh_status() {
#    echo "rh_status"
    # run checks to determine if the service is running or use generic status
    #status -p /var/run/crond.pid $prog
#}

#rh_status_q() {
#    echo "rh_status_q"
#   # rh_status >/dev/null 2>&1
#}


case "$1" in
    start)
        #rh_status_q && exit 0
        $1
        ;;
    stop)
        #rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?